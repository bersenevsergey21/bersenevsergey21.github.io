{"version":3,"sources":["classes.module.css","MainPage.jsx","reportWebVitals.js","index.js"],"names":["module","exports","MainPage","props","followToPokemon","url","name","image","exec","substr","axios","get","then","res1","data","pokemon","res2","InfoArray","unshift","types","type","weight","height","base_experience","forms","abilities","ability","setList","setInfoArray","setMainMenu","useState","pokemonList","setPokemonList","countPokemon","setCountPokemon","currentPage","setCurrentPage","mainMenu","blur","setBlur","list","listAllPokemon","setListAllPokemon","previousNum","setPreviousNum","futureNum","pagesArray","pagesQuantity","Math","ceil","i","push","useEffect","res","results","map","p","count","className","classes","onClick","textOnBlur","aryy","flexOnBlur","href","header","console","log","listOfPokemons","d","boxOfAllNames","m","mainBox","box","src","alt","boxName","previousAndFutures","previousAndNext","disabled","filter","no","e","onPageChanged","pokemonMainBox","pokemonNameBox","pokemonMainInfoBox","center","pokemonInfoBox","flex","buttonContinue","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ebcbbbd6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"classes_header__1v4Pk\",\"box\":\"classes_box__3ekaC\",\"boxName\":\"classes_boxName__jicLh\",\"mainBox\":\"classes_mainBox__HGA8D\",\"previousAndFutures\":\"classes_previousAndFutures__3vDsC\",\"currentPage\":\"classes_currentPage__M7EGF\",\"pokemonPage\":\"classes_pokemonPage__3DBb8\",\"pokemonMainBox\":\"classes_pokemonMainBox__3dwJn\",\"pokemonNameBox\":\"classes_pokemonNameBox__1aymP\",\"pokemonMainInfoBox\":\"classes_pokemonMainInfoBox__1maQj\",\"pokemonInfoBox\":\"classes_pokemonInfoBox__2P9co\",\"buttonContinue\":\"classes_buttonContinue__9cqxK\",\"flex\":\"classes_flex__3qZf9\",\"blur\":\"classes_blur__1gWn1\",\"boxOfAllNames\":\"classes_boxOfAllNames__fJdS2\",\"listOfPokemons\":\"classes_listOfPokemons__1091r\",\"textOnBlur\":\"classes_textOnBlur__160th\",\"aryy\":\"classes_aryy__uGfUY\",\"center\":\"classes_center__FfZA5\",\"previousAndNext\":\"classes_previousAndNext__27OLV\",\"@media\":\"classes_@media__1wcxy\"};","import React, {useState,useEffect} from 'react';\r\nimport axios from 'axios'\r\nimport classes from './classes.module.css'\r\n\r\nconst MainPage = (props) => { \r\n  /*put data from server into array*/\r\n  const followToPokemon = (url, name) => {\r\n    debugger\r\n  let image = \"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/\" + +/\\d+/.exec(url.substr(-6, 6)) + \".png\"\r\n  axios.get(url)\r\n    .then(res1 => {axios.get(res1.data.pokemon[0].pokemon.url)\r\n    .then(res2 => {InfoArray.unshift(image)\r\n                   InfoArray.unshift(name)\r\n                   InfoArray.unshift(res2.data.types[0].type.name)\r\n                   InfoArray.unshift(res2.data.weight);\r\n                   InfoArray.unshift(res2.data.height);\r\n                   InfoArray.unshift(res2.data.base_experience);\r\n                   InfoArray.unshift(res2.data.forms[0].name);\r\n                   InfoArray.unshift(res2.data.abilities[0].ability.name);\r\n                   setList(false)\r\n                   setInfoArray(InfoArray)\r\n                   setMainMenu(false)\r\n                  }\r\n         )\r\n                  }\r\n         )\r\n  }\r\n  /*Some necessary constants*/\r\n  const pokemonsInPage = 5;\r\n  const [InfoArray, setInfoArray] = useState([\"no info\",\"no info\",\"no info\",0,0,\"no info\",\"Choose Pokemon\",\"https://i.pinimg.com/236x/c0/81/72/c08172de4c092064dd4216d7fa902298.jpg\"]);\r\n  const [pokemonList, setPokemonList] = useState([]);\r\n  const [countPokemon, setCountPokemon] = useState(100);\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const [mainMenu, setMainMenu] = useState(true)\r\n  const [blur, setBlur] = useState(false);\r\n  const [list, setList] = useState([])\r\n  const [listAllPokemon, setListAllPokemon] = useState([])\r\n  /*Here constants and functions for pagination*/\r\n  const [previousNum, setPreviousNum] = useState(0)\r\n  const previous = () => {setPreviousNum(previousNum-pokemonsInPage)}\r\n  const future = () => {setPreviousNum(previousNum+pokemonsInPage)}\r\n  let futureNum = previousNum + pokemonsInPage;\r\n  let pagesArray = []\r\n  let pagesQuantity = Math.ceil(countPokemon/8); \r\n  const onPageChanged = (i) => {\r\n    setCurrentPage(i)\r\n    i--\r\n    axios.get(`https://pokeapi.co/api/v2/ability/?limit=${8}&offset=${i*8}`)\r\n    .then(res => {setPokemonList(res.data.results.map(p => p))})\r\n  } \r\n    for (let i = 1; i <= pagesQuantity; i++) {\r\n      pagesArray.push(i)\r\n    } \r\n  \r\n/*  const allPokemon = () => {\r\n    axios.get(\"https://pokeapi.co/api/v2/ability/\")\r\n      .then(res1 => {setCountPokemon(res1.data.count)})\r\n      .then(res2 => {axios.get(`https://pokeapi.co/api/v2/ability/?limit=290&offset=0`)})\r\n      .then(res3 => {setList(res3.data.results.map(p => p)); console.log(list)})\r\n  }*/\r\n  \r\n  const allPokemon = () => {\r\n    axios.get(`https://pokeapi.co/api/v2/ability/?limit=${293}&offset=0`)\r\n     .then(res => {setListAllPokemon(res.data.results.map(p => p)); console.log(listAllPokemon)})\r\n  }\r\n  /*End of constants and functions for pagination*/\r\n  \r\n useEffect(()=>{\r\n   axios.get(`https://pokeapi.co/api/v2/ability/?limit=${8}&offset=0`)\r\n     .then(res => {setPokemonList(res.data.results.map(p => p))})}, [])\r\n\r\n useEffect(()=>{\r\n   axios.get(\"https://pokeapi.co/api/v2/ability/\").then(res => {setCountPokemon(res.data.count)})}, [])\r\n\r\n\r\n  return (\r\n    <div>\r\n      {blur \r\n        ? <div className={classes.blur} onClick={()=>{setBlur(false)}}>\r\n            <div className={classes.textOnBlur} onClick={()=>{setBlur(false)}}>\r\n            Это приложение способно получать данные с сервера с помощью get-запросов и имеет адаптивную верстку.\r\n            Данный сайт имеет навигационное меню и страницы, но написан по принципу SPA для оптимизации:\r\n              <ul>\r\n                <li> Проект не предполагает расширения и добавления новых модулей. Соответственно, не использует BrowserRouter и NavLink to</li>\r\n                <li> Имеется всего несколько переменных, и все они используются только в одной компоненте. Таким образом, прокидывание данных через props'ы неприменимо. Вместо global State и контейнерных компонент используется UseState</li>\r\n                <li> Отсутсвие Redux Thunk (middleware-прослойки) продиктовано этими же причинами. Запросы идут сразу из компонент. Это нарушает принцип чистой функции, но избавляет малозадачное приложение от обрастания дополнительными модулями.</li>\r\n              </ul>\r\n            C ещё одним проектом react-приложения, использующего глобальный и локальные стейты, redux-form, редьюсеры, Thunk, HOC  и общающемся с сервером с помощью get, put и delete запросов можно ознакомиться ниже:\r\n              <div className={classes.aryy}>\r\n                <div className={classes.flexOnBlur}>\r\n                  <a href=\"https://sergeybersenev98.github.io/\"><button>Запуск приложения на Github</button></a>\r\n                  <a href=\"https://github.com/SergeyBersenev98/SergeyBersenev98.github.io\"><button>Просмотр кода приложения на Github</button></a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        : <div></div>}\r\n      <div className={classes.header}>  \r\n        <div onClick={()=>{setMainMenu(true); setList(false)}}>Main page</div>\r\n        <div onClick={()=>{setMainMenu(false); setList(false)} }>Pokemon</div>\r\n        <div onClick={()=>{setList(true); setMainMenu(false); setBlur(false); allPokemon()}}>List</div>\r\n        <div onClick={()=>{setBlur(true)}}>About</div>\r\n      </div>\r\n      {list\r\n        ? <div className={classes.listOfPokemons}>  \r\n          {listAllPokemon.map(d=> <div key={d.url} className={classes.boxOfAllNames} \r\n                                    onClick={()=>{followToPokemon(d.url, d.name)}}>\r\n                                    <div>\r\n                                      {d.name}\r\n                                    </div>\r\n                                  </div>      \r\n                             )\r\n            }      \r\n          </div>\r\n        : <div></div>\r\n      }\r\n      {mainMenu \r\n        ? \r\n        <div className={classes.mainMenu}>\r\n          <div className={classes.m}>\r\n            <div className={classes.mainBox}>\r\n              {pokemonList.map(d => \r\n                <div key={d.url} className={classes.box} onClick={()=>{followToPokemon(d.url, d.name)}}>\r\n                                 <img src = {\"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/\" + +/\\d+/.exec(d.url.substr(-6, 6)) + \".png\"} alt=\"Pokemon\"/>\r\n                                 <div className={classes.boxName}>\r\n                                  {d.name}\r\n                                 </div>\r\n                </div>\r\n                              )\r\n              }\r\n            </div>\r\n          </div>\r\n        <div className = {classes.previousAndFutures}> \r\n          <button className={classes.previousAndNext}onClick = {previous} disabled = {previousNum<1 ? \"disabled\" : \"\"}>&lt;</button>\r\n            {pagesArray\r\n              .filter(i => i>previousNum && i<=futureNum)\r\n              .map(i => {\r\n                return <span key = {i} className = {currentPage === i \r\n                  ? classes.currentPage \r\n                  : classes.no} onClick = {(e) => {onPageChanged(i)}} ><b>{i}&nbsp; </b></span>})}\r\n          <button className={classes.previousAndNext}onClick = {future} disabled = {futureNum>pagesQuantity ? \"disabled\" : \"\"}>&gt;</button>\r\n        </div>\r\n      </div>\r\n      : \r\n     <div>\r\n        {list \r\n          ? <div></div> \r\n          :\r\n      <div>\r\n        <div className={classes.pokemonMainBox}>\r\n          <div className={classes.pokemonNameBox}>{InfoArray[6]}</div>\r\n            <div className={classes.pokemonMainInfoBox}>\r\n              <div className={classes.center}>\r\n                <img src = {InfoArray[7]} alt=\"Pokemon\"></img>\r\n              </div>  \r\n\r\n              <div className={classes.pokemonInfoBox}>\r\n\r\n                <div className={classes.flex}>\r\n                  <div>Type:</div>\r\n                  <div>{InfoArray[5]}</div>\r\n                </div>\r\n\r\n                <div className={classes.flex}>\r\n                  <div>Weight:</div>\r\n                  <div>{\" \"}{InfoArray[4]}</div>\r\n                </div>\r\n\r\n                <div className={classes.flex}>\r\n                  <div>Height:</div>\r\n                  <div>{\" \"}{InfoArray[3]}</div>\r\n                </div>\r\n\r\n                <div className={classes.flex}>\r\n                  <div>Experience:</div>\r\n                  <div>{InfoArray[2]}</div>\r\n                </div>\r\n  \r\n                <div className={classes.flex}>\r\n                  <div>Forms:</div>\r\n                  <div>{InfoArray[1]}</div>\r\n                </div>\r\n  \r\n                <div className={classes.flex}>\r\n                  <div>Abilities:</div>\r\n                  <div>{InfoArray[0]}</div>\r\n                </div>\r\n              </div> \r\n          </div>     \r\n          </div>  \r\n        <button className={classes.buttonContinue}onClick={()=>{setMainMenu(true)}}>Continue</button>\r\n      </div>}\r\n      </div>\r\n      }\r\n    </div>\r\n  )\r\n}\r\nexport default MainPage\r\n\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport MainPage from './MainPage';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <MainPage />\n  </React.StrictMode>,\ndocument.getElementById('root')\n );\n\n\nreportWebVitals();\n"],"sourceRoot":""}