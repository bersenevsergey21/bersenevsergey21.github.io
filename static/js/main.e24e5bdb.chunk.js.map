{"version":3,"sources":["classes.module.css","MainPage.jsx","reportWebVitals.js","index.js"],"names":["module","exports","MainPage","props","useState","InfoArray","setInfoArray","pokemonList","setPokemonList","countPokemon","setCountPokemon","currentPage","setCurrentPage","mainMenu","setMainMenu","blur","setBlur","previousNum","setPreviousNum","futureNum","pagesArray","pagesQuantity","Math","ceil","i","push","useEffect","axios","get","then","res","data","results","map","p","count","className","classes","onClick","textOnBlur","aryy","flexOnBlur","href","header","m","mainBox","d","box","url","name","image","exec","substr","res1","pokemon","res2","unshift","types","type","weight","height","base_experience","forms","abilities","ability","followToPokemon","src","alt","boxName","previousAndFutures","previousAndNext","disabled","filter","no","e","onPageChanged","pokemonMainBox","pokemonNameBox","pokemonMainInfoBox","center","pokemonInfoBox","flex","buttonContinue","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e24e5bdb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"classes_header__1v4Pk\",\"box\":\"classes_box__3ekaC\",\"boxName\":\"classes_boxName__jicLh\",\"mainBox\":\"classes_mainBox__HGA8D\",\"previousAndFutures\":\"classes_previousAndFutures__3vDsC\",\"currentPage\":\"classes_currentPage__M7EGF\",\"pokemonPage\":\"classes_pokemonPage__3DBb8\",\"pokemonMainBox\":\"classes_pokemonMainBox__3dwJn\",\"pokemonNameBox\":\"classes_pokemonNameBox__1aymP\",\"pokemonMainInfoBox\":\"classes_pokemonMainInfoBox__1maQj\",\"pokemonInfoBox\":\"classes_pokemonInfoBox__2P9co\",\"buttonContinue\":\"classes_buttonContinue__9cqxK\",\"flex\":\"classes_flex__3qZf9\",\"blur\":\"classes_blur__1gWn1\",\"textOnBlur\":\"classes_textOnBlur__160th\",\"aryy\":\"classes_aryy__uGfUY\",\"center\":\"classes_center__FfZA5\",\"previousAndNext\":\"classes_previousAndNext__27OLV\",\"@media\":\"classes_@media__1wcxy\"};","import React, {useState,useEffect} from 'react';\r\nimport axios from 'axios'\r\nimport classes from './classes.module.css'\r\n\r\nconst MainPage = (props) => { \r\n  /*put data from server into array*/\r\n  const followToPokemon = (url, name) => {\r\n  let image = \"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/\" + +/\\d+/.exec(url.substr(-6, 6)) + \".png\"\r\n  axios.get(url)\r\n    .then(res1 => {axios.get(res1.data.pokemon[0].pokemon.url)\r\n    .then(res2 => {InfoArray.unshift(image)\r\n                   InfoArray.unshift(name)\r\n                   InfoArray.unshift(res2.data.types[0].type.name)\r\n                   InfoArray.unshift(res2.data.weight);\r\n                   InfoArray.unshift(res2.data.height);\r\n                   InfoArray.unshift(res2.data.base_experience);\r\n                   InfoArray.unshift(res2.data.forms[0].name);\r\n                   InfoArray.unshift(res2.data.abilities[0].ability.name);\r\n                   setInfoArray(InfoArray)\r\n                   setMainMenu(false)\r\n                  }\r\n         )\r\n                  }\r\n         )\r\n  }\r\n  /*Some necessary constants*/\r\n  const pokemonsInPage = 5;\r\n  const [InfoArray, setInfoArray] = useState([\"no info\",\"no info\",\"no info\",0,0,\"no info\",\"Choose Pokemon\",\"\"]);\r\n  const [pokemonList, setPokemonList] = useState([]);\r\n  const [countPokemon, setCountPokemon] = useState(100);\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const [mainMenu, setMainMenu] = useState(true)\r\n  const [blur, setBlur] = useState(false);\r\n  \r\n  /*Here constants and functions for pagination*/\r\n  const [previousNum, setPreviousNum] = useState(0)\r\n  const previous = () => {setPreviousNum(previousNum-pokemonsInPage)}\r\n  const future = () => {setPreviousNum(previousNum+pokemonsInPage)}\r\n  let futureNum = previousNum + pokemonsInPage;\r\n  let pagesArray = []\r\n  let pagesQuantity = Math.ceil(countPokemon/pokemonsInPage); \r\n  const onPageChanged = (i) => {\r\n    setCurrentPage(i)\r\n    i--\r\n    axios.get(`https://pokeapi.co/api/v2/ability/?limit=${8}&offset=${i*8}`)\r\n    .then(res => {setPokemonList(res.data.results.map(p => p))})\r\n  } \r\n    for (let i = 1; i <= pagesQuantity; i++) {\r\n      pagesArray.push(i)\r\n    } \r\n  /*End of constants and functions for pagination*/\r\n  \r\n useEffect(()=>{\r\n   axios.get(`https://pokeapi.co/api/v2/ability/?limit=${8}&offset=0`)\r\n     .then(res => {setPokemonList(res.data.results.map(p => p))})}, [])\r\n\r\n useEffect(()=>{\r\n   axios.get(\"https://pokeapi.co/api/v2/ability/\").then(res => {setCountPokemon(res.data.count)})}, [])\r\n\r\n\r\n  return (\r\n    <div>\r\n      {blur \r\n        ? <div className={classes.blur} onClick={()=>{setBlur(false)}}>\r\n            <div className={classes.textOnBlur} onClick={()=>{setBlur(false)}}>\r\n            Это приложение способно получать данные с сервера с помощью get-запросов и имеет адаптивную верстку.\r\n            Данный сайт имеет навигационное меню и страницы, но написан по принципу SPA для оптимизации:\r\n              <ul>\r\n                <li> Проект не предполагает расширения и добавления новых модулей. Соответственно, не использует BrowserRouter и NavLink to</li>\r\n                <li> Имеется всего несколько переменных, и все они используются только в одной компоненте. Таким образом, прокидывание данных через props'ы неприменимо. Вместо global State и контейнерных компонент используется UseState</li>\r\n                <li> Отсутсвие Redux Thunk (middleware-прослойки) продиктовано этими же причинами. Запросы идут сразу из компонент. Это нарушает принцип чистой функции, но избавляет малозадачное приложение от обрастания дополнительными модулями.</li>\r\n              </ul>\r\n            C ещё одним проектом react-приложения, использующего глобальный и локальные стейты, redux-form, редьюсеры, Thunk, HOC  и общающемся с сервером с помощью get, put и delete запросов можно ознакомиться ниже:\r\n              <div className={classes.aryy}>\r\n                <div className={classes.flexOnBlur}>\r\n                  <a href=\"https://sergeybersenev98.github.io/\"><button>Запуск приложения на Github</button></a>\r\n                  <a href=\"https://github.com/SergeyBersenev98/SergeyBersenev98.github.io\"><button>Просмотр кода приложения на Github</button></a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        : <div></div>\r\n      }\r\n      <div className={classes.header}>  \r\n        <div onClick={()=>{setMainMenu(true)}}>Main page</div>\r\n        <div onClick={()=>{setMainMenu(false)}}>Pokemon</div>\r\n        <div onClick={()=>{setBlur(true)}}>About</div>\r\n      </div>\r\n      {mainMenu \r\n        ? \r\n        <div className={classes.mainMenu}>\r\n          <div className={classes.m}>\r\n            <div className={classes.mainBox}>\r\n              {pokemonList.map(d => \r\n                <div key={d.url} className={classes.box} onClick={()=>{followToPokemon(d.url, d.name)}}>\r\n                                 <img src = {\"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/\" + +/\\d+/.exec(d.url.substr(-6, 6)) + \".png\"} alt=\"Pokemon\"/>\r\n                                 <div className={classes.boxName}>\r\n                                  {d.name}\r\n                                 </div>\r\n                </div>)\r\n              }\r\n            </div>\r\n          </div>\r\n        <div className = {classes.previousAndFutures}> \r\n          <button className={classes.previousAndNext}onClick = {previous} disabled = {previousNum<1 ? \"disabled\" : \"\"}>&lt;</button>\r\n            {pagesArray\r\n              .filter(i => i>previousNum && i<=futureNum)\r\n              .map(i => {\r\n                return <span key = {i} className = {currentPage === i \r\n                  ? classes.currentPage \r\n                  : classes.no} onClick = {(e) => {onPageChanged(i)}} ><b>{i}&nbsp; </b></span>})}\r\n          <button className={classes.previousAndNext}onClick = {future} disabled = {futureNum>pagesQuantity ? \"disabled\" : \"\"}>&gt;</button>\r\n        </div>\r\n      </div>\r\n      :\r\n      <div>\r\n        <div className={classes.pokemonMainBox}>\r\n          <div className={classes.pokemonNameBox}>{InfoArray[6]}</div>\r\n            <div className={classes.pokemonMainInfoBox}>\r\n              <div className={classes.center}>\r\n                <img src = {InfoArray[7]} alt=\"Pokemon\"></img>\r\n              </div>  \r\n\r\n              <div className={classes.pokemonInfoBox}>\r\n\r\n                <div className={classes.flex}>\r\n                  <div>Type:</div>\r\n                  <div>{InfoArray[5]}</div>\r\n                </div>\r\n\r\n                <div className={classes.flex}>\r\n                  <div>Weight:</div>\r\n                  <div>{\" \"}{InfoArray[4]}</div>\r\n                </div>\r\n\r\n                <div className={classes.flex}>\r\n                  <div>Height:</div>\r\n                  <div>{\" \"}{InfoArray[3]}</div>\r\n                </div>\r\n\r\n                <div className={classes.flex}>\r\n                  <div>Experience:</div>\r\n                  <div>{InfoArray[2]}</div>\r\n                </div>\r\n  \r\n                <div className={classes.flex}>\r\n                  <div>Forms:</div>\r\n                  <div>{InfoArray[1]}</div>\r\n                </div>\r\n  \r\n                <div className={classes.flex}>\r\n                  <div>Abilities:</div>\r\n                  <div>{InfoArray[0]}</div>\r\n                </div>\r\n              </div> \r\n          </div>     \r\n          </div>  \r\n        <button className={classes.buttonContinue}onClick={()=>{setMainMenu(true)}}>Continue</button>\r\n      </div>}\r\n    </div>\r\n  )\r\n}\r\nexport default MainPage\r\n\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport MainPage from './MainPage';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <MainPage />\n  </React.StrictMode>,\ndocument.getElementById('root')\n );\n\n\nreportWebVitals();\n"],"sourceRoot":""}